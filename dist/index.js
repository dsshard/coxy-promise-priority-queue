var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var l=Object.prototype.hasOwnProperty;var y=(u,r)=>{for(var e in r)a(u,e,{get:r[e],enumerable:!0})},v=(u,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of b(r))!l.call(u,n)&&n!==e&&a(u,n,{get:()=>r[n],enumerable:!(t=p(r,n))||t.enumerable});return u};var w=u=>v(a({},"__esModule",{value:!0}),u);var P={};y(P,{promisePriorityQueue:()=>q});module.exports=w(P);var m=require("@coxy/queue");function q(u=1,r=0){if(Number(u)<=0)throw new TypeError("Expected `concurrency` to be a number from 1 and up");let e=new m.PriorityQueue,t=0,n=!1,c=()=>{n||(t--,e.size>0&&e.dequeue()())},d=async(o,s)=>{t++;let i=(async()=>o())();s(i);try{await i}catch{}c()},f=(o,s,i)=>{e.enqueue(d.bind(void 0,o,i),s),(async()=>(await Promise.resolve(),t<u&&e.size>0&&e.dequeue()()))()};return{add:(o,s)=>new Promise(i=>{f(o,s||r,i)}),get active(){return t},get pending(){return e.size},clear:()=>{e.clear()},pause:()=>{n=!0},resume:()=>{n=!1,c()}}}0&&(module.exports={promisePriorityQueue});
//# sourceMappingURL=index.js.map