import{PriorityQueue as d}from"@coxy/queue";function p(o=1,a=0){if(Number(o)<=0)throw new TypeError("Expected `concurrency` to be a number from 1 and up");let e=new d,t=0,i=!1,s=()=>{i||(t--,e.size>0&&e.dequeue()())},c=async(u,n)=>{t++;let r=(async()=>u())();n(r);try{await r}catch{}s()},m=(u,n,r)=>{e.enqueue(c.bind(void 0,u,r),n),(async()=>(await Promise.resolve(),t<o&&e.size>0&&e.dequeue()()))()};return{add:(u,n)=>new Promise(r=>{m(u,n||a,r)}),get active(){return t},get pending(){return e.size},clear:()=>{e.clear()},pause:()=>{i=!0},resume:()=>{i=!1,s()}}}export{p as promisePriorityQueue};
//# sourceMappingURL=index.mjs.map